{"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"datasetId":3950844,"sourceId":6875518,"sourceType":"datasetVersion"}],"dockerImageVersionId":30648,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":710.220083,"end_time":"2024-02-08T14:50:19.812136","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-02-08T14:38:29.592053","version":"2.5.0"}},"nbformat_minor":5,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Import Dependencies","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","papermill":{"duration":0.008816,"end_time":"2024-02-08T14:38:32.329297","exception":false,"start_time":"2024-02-08T14:38:32.320481","status":"completed"},"tags":[]}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nimport re\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","metadata":{"papermill":{"duration":2.395216,"end_time":"2024-02-08T14:38:34.732649","exception":false,"start_time":"2024-02-08T14:38:32.337433","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:26.603652Z","iopub.execute_input":"2024-07-06T19:09:26.604121Z","iopub.status.idle":"2024-07-06T19:09:29.912570Z","shell.execute_reply.started":"2024-07-06T19:09:26.604082Z","shell.execute_reply":"2024-07-06T19:09:29.910538Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import nltk\nnltk.download('stopwords')","metadata":{"papermill":{"duration":0.073387,"end_time":"2024-02-08T14:38:34.814123","exception":false,"start_time":"2024-02-08T14:38:34.740736","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:29.914965Z","iopub.execute_input":"2024-07-06T19:09:29.915893Z","iopub.status.idle":"2024-07-06T19:09:49.973390Z","shell.execute_reply.started":"2024-07-06T19:09:29.915846Z","shell.execute_reply":"2024-07-06T19:09:49.972356Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"[nltk_data] Error loading stopwords: <urlopen error [Errno -3]\n[nltk_data]     Temporary failure in name resolution>\n","output_type":"stream"},{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"False"},"metadata":{}}]},{"cell_type":"code","source":"# let's check stopwords\nprint(stopwords.words('english'))","metadata":{"papermill":{"duration":0.018108,"end_time":"2024-02-08T14:38:34.840375","exception":false,"start_time":"2024-02-08T14:38:34.822267","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:49.974754Z","iopub.execute_input":"2024-07-06T19:09:49.975145Z","iopub.status.idle":"2024-07-06T19:09:49.987797Z","shell.execute_reply.started":"2024-07-06T19:09:49.975107Z","shell.execute_reply":"2024-07-06T19:09:49.986512Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/fake-news/news.csv')","metadata":{"papermill":{"duration":0.814058,"end_time":"2024-02-08T14:38:35.663381","exception":false,"start_time":"2024-02-08T14:38:34.849323","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:49.990244Z","iopub.execute_input":"2024-07-06T19:09:49.990605Z","iopub.status.idle":"2024-07-06T19:09:50.910193Z","shell.execute_reply.started":"2024-07-06T19:09:49.990576Z","shell.execute_reply":"2024-07-06T19:09:50.907646Z"},"trusted":true},"execution_count":4,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[4], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m/kaggle/input/fake-news/news.csv\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m   1014\u001b[0m     dialect,\n\u001b[1;32m   1015\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[1;32m   1023\u001b[0m )\n\u001b[1;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[1;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1881\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1882\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1883\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1884\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1885\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1886\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1887\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1888\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1889\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[1;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[1;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[1;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[0;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[1;32m    874\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    875\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    876\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    877\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    878\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    879\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/kaggle/input/fake-news/news.csv'"],"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/kaggle/input/fake-news/news.csv'","output_type":"error"}]},{"cell_type":"code","source":"df.head()","metadata":{"papermill":{"duration":0.026071,"end_time":"2024-02-08T14:38:35.698315","exception":false,"start_time":"2024-02-08T14:38:35.672244","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.910985Z","iopub.status.idle":"2024-07-06T19:09:50.911362Z","shell.execute_reply.started":"2024-07-06T19:09:50.911185Z","shell.execute_reply":"2024-07-06T19:09:50.911201Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Check how many rows & columns are in the data ","metadata":{"papermill":{"duration":0.008978,"end_time":"2024-02-08T14:38:35.715626","exception":false,"start_time":"2024-02-08T14:38:35.706648","status":"completed"},"tags":[]}},{"cell_type":"code","source":"df.shape","metadata":{"papermill":{"duration":0.016578,"end_time":"2024-02-08T14:38:35.740468","exception":false,"start_time":"2024-02-08T14:38:35.723890","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.912627Z","iopub.status.idle":"2024-07-06T19:09:50.912968Z","shell.execute_reply.started":"2024-07-06T19:09:50.912806Z","shell.execute_reply":"2024-07-06T19:09:50.912820Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Checks missing values","metadata":{"papermill":{"duration":0.008289,"end_time":"2024-02-08T14:38:35.757210","exception":false,"start_time":"2024-02-08T14:38:35.748921","status":"completed"},"tags":[]}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"papermill":{"duration":0.021128,"end_time":"2024-02-08T14:38:35.787125","exception":false,"start_time":"2024-02-08T14:38:35.765997","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.914523Z","iopub.status.idle":"2024-07-06T19:09:50.914931Z","shell.execute_reply.started":"2024-07-06T19:09:50.914735Z","shell.execute_reply":"2024-07-06T19:09:50.914751Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Separating data and labels","metadata":{"papermill":{"duration":0.008387,"end_time":"2024-02-08T14:38:35.804094","exception":false,"start_time":"2024-02-08T14:38:35.795707","status":"completed"},"tags":[]}},{"cell_type":"code","source":"X = df.drop(columns = 'label')\nY = df['label']","metadata":{"papermill":{"duration":0.02252,"end_time":"2024-02-08T14:38:35.835219","exception":false,"start_time":"2024-02-08T14:38:35.812699","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.916395Z","iopub.status.idle":"2024-07-06T19:09:50.916800Z","shell.execute_reply.started":"2024-07-06T19:09:50.916622Z","shell.execute_reply":"2024-07-06T19:09:50.916638Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Stemming","metadata":{"papermill":{"duration":0.008372,"end_time":"2024-02-08T14:38:35.852130","exception":false,"start_time":"2024-02-08T14:38:35.843758","status":"completed"},"tags":[]}},{"cell_type":"code","source":"stem = PorterStemmer()","metadata":{"papermill":{"duration":0.014633,"end_time":"2024-02-08T14:38:35.875193","exception":false,"start_time":"2024-02-08T14:38:35.860560","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.918470Z","iopub.status.idle":"2024-07-06T19:09:50.918981Z","shell.execute_reply.started":"2024-07-06T19:09:50.918717Z","shell.execute_reply":"2024-07-06T19:09:50.918739Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def stemming(text):\n    stem_text = re.sub('[^a-zA-Z]',' ',text)\n    stem_text = stem_text.lower()\n    stem_text = stem_text.split()\n    stem_text = [stem.stem(word) for word in stem_text if not word in stopwords.words('english')] \n    stem_text = ' '.join(stem_text)\n    return stem_text","metadata":{"papermill":{"duration":0.015951,"end_time":"2024-02-08T14:38:35.899716","exception":false,"start_time":"2024-02-08T14:38:35.883765","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.921190Z","iopub.status.idle":"2024-07-06T19:09:50.921697Z","shell.execute_reply.started":"2024-07-06T19:09:50.921428Z","shell.execute_reply":"2024-07-06T19:09:50.921466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['text'] = df['text'].apply(stemming)","metadata":{"papermill":{"duration":696.621638,"end_time":"2024-02-08T14:50:12.529974","exception":false,"start_time":"2024-02-08T14:38:35.908336","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.923184Z","iopub.status.idle":"2024-07-06T19:09:50.923685Z","shell.execute_reply.started":"2024-07-06T19:09:50.923419Z","shell.execute_reply":"2024-07-06T19:09:50.923456Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x = df['text'].values\ny = df['label'].values","metadata":{"papermill":{"duration":0.015784,"end_time":"2024-02-08T14:50:12.555259","exception":false,"start_time":"2024-02-08T14:50:12.539475","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.925583Z","iopub.status.idle":"2024-07-06T19:09:50.926086Z","shell.execute_reply.started":"2024-07-06T19:09:50.925822Z","shell.execute_reply":"2024-07-06T19:09:50.925843Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Coverting textual data into numeric data","metadata":{"papermill":{"duration":0.008487,"end_time":"2024-02-08T14:50:12.572429","exception":false,"start_time":"2024-02-08T14:50:12.563942","status":"completed"},"tags":[]}},{"cell_type":"code","source":"vect = TfidfVectorizer()\nvect.fit(x)\n\nX = vect.transform(x)","metadata":{"papermill":{"duration":5.487898,"end_time":"2024-02-08T14:50:18.068999","exception":false,"start_time":"2024-02-08T14:50:12.581101","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.927859Z","iopub.status.idle":"2024-07-06T19:09:50.928226Z","shell.execute_reply.started":"2024-07-06T19:09:50.928053Z","shell.execute_reply":"2024-07-06T19:09:50.928069Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Spliting into X and Y","metadata":{"papermill":{"duration":0.009633,"end_time":"2024-02-08T14:50:18.089325","exception":false,"start_time":"2024-02-08T14:50:18.079692","status":"completed"},"tags":[]}},{"cell_type":"code","source":"Xtrain, Xtest,Ytrain,Ytest = train_test_split(X,y,test_size=0.2,random_state=2)","metadata":{"papermill":{"duration":0.024364,"end_time":"2024-02-08T14:50:18.123103","exception":false,"start_time":"2024-02-08T14:50:18.098739","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.929586Z","iopub.status.idle":"2024-07-06T19:09:50.929972Z","shell.execute_reply.started":"2024-07-06T19:09:50.929772Z","shell.execute_reply":"2024-07-06T19:09:50.929786Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Model training","metadata":{"papermill":{"duration":0.00909,"end_time":"2024-02-08T14:50:18.142042","exception":false,"start_time":"2024-02-08T14:50:18.132952","status":"completed"},"tags":[]}},{"cell_type":"code","source":"model = LogisticRegression()","metadata":{"papermill":{"duration":0.016179,"end_time":"2024-02-08T14:50:18.168308","exception":false,"start_time":"2024-02-08T14:50:18.152129","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.931824Z","iopub.status.idle":"2024-07-06T19:09:50.932203Z","shell.execute_reply.started":"2024-07-06T19:09:50.932026Z","shell.execute_reply":"2024-07-06T19:09:50.932041Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.fit(Xtrain,Ytrain)","metadata":{"papermill":{"duration":0.819388,"end_time":"2024-02-08T14:50:18.996920","exception":false,"start_time":"2024-02-08T14:50:18.177532","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.933365Z","iopub.status.idle":"2024-07-06T19:09:50.933755Z","shell.execute_reply.started":"2024-07-06T19:09:50.933578Z","shell.execute_reply":"2024-07-06T19:09:50.933594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Evaluation","metadata":{"papermill":{"duration":0.018501,"end_time":"2024-02-08T14:50:19.033992","exception":false,"start_time":"2024-02-08T14:50:19.015491","status":"completed"},"tags":[]}},{"cell_type":"code","source":"xtrain = model.predict(Xtrain)\nprint(xtrain)","metadata":{"papermill":{"duration":0.04258,"end_time":"2024-02-08T14:50:19.095663","exception":false,"start_time":"2024-02-08T14:50:19.053083","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.935465Z","iopub.status.idle":"2024-07-06T19:09:50.936028Z","shell.execute_reply.started":"2024-07-06T19:09:50.935679Z","shell.execute_reply":"2024-07-06T19:09:50.935695Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Acc = accuracy_score(xtrain,Ytrain)\nprint(Acc)","metadata":{"papermill":{"duration":0.03175,"end_time":"2024-02-08T14:50:19.148010","exception":false,"start_time":"2024-02-08T14:50:19.116260","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.937169Z","iopub.status.idle":"2024-07-06T19:09:50.937543Z","shell.execute_reply.started":"2024-07-06T19:09:50.937348Z","shell.execute_reply":"2024-07-06T19:09:50.937362Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Evaluation on test data","metadata":{"papermill":{"duration":0.009231,"end_time":"2024-02-08T14:50:19.166148","exception":false,"start_time":"2024-02-08T14:50:19.156917","status":"completed"},"tags":[]}},{"cell_type":"code","source":"xtest = model.predict(Xtest)\nprint(xtest)","metadata":{"papermill":{"duration":0.017102,"end_time":"2024-02-08T14:50:19.192156","exception":false,"start_time":"2024-02-08T14:50:19.175054","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.938624Z","iopub.status.idle":"2024-07-06T19:09:50.938972Z","shell.execute_reply.started":"2024-07-06T19:09:50.938809Z","shell.execute_reply":"2024-07-06T19:09:50.938824Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Acc = accuracy_score(xtest,Ytest)\nprint(Acc)","metadata":{"papermill":{"duration":0.019668,"end_time":"2024-02-08T14:50:19.220749","exception":false,"start_time":"2024-02-08T14:50:19.201081","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.940705Z","iopub.status.idle":"2024-07-06T19:09:50.941082Z","shell.execute_reply.started":"2024-07-06T19:09:50.940907Z","shell.execute_reply":"2024-07-06T19:09:50.940923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Let's make a predicted System","metadata":{"papermill":{"duration":0.008811,"end_time":"2024-02-08T14:50:19.238557","exception":false,"start_time":"2024-02-08T14:50:19.229746","status":"completed"},"tags":[]}},{"cell_type":"code","source":"X_news = Xtest[2]\npredict = model.predict(X_news)\n\nprint(predict)\n\nif predict[0] == 'REAL':\n    print('the news is real')\nelse:\n    print('the news is fake')","metadata":{"papermill":{"duration":0.017751,"end_time":"2024-02-08T14:50:19.265321","exception":false,"start_time":"2024-02-08T14:50:19.247570","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:09:50.942284Z","iopub.status.idle":"2024-07-06T19:09:50.942672Z","shell.execute_reply.started":"2024-07-06T19:09:50.942484Z","shell.execute_reply":"2024-07-06T19:09:50.942501Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"papermill":{"duration":0.008874,"end_time":"2024-02-08T14:50:19.283532","exception":false,"start_time":"2024-02-08T14:50:19.274658","status":"completed"},"tags":[]},"execution_count":null,"outputs":[]}]}