{"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":841679,"sourceId":1436563,"sourceType":"datasetVersion"}],"dockerImageVersionId":30715,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":89.056373,"end_time":"2024-06-04T15:27:34.722926","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-04T15:26:05.666553","version":"2.5.0"}},"nbformat_minor":5,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","papermill":{"duration":2.565541,"end_time":"2024-06-04T15:26:11.332988","exception":false,"start_time":"2024-06-04T15:26:08.767447","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:44.179478Z","iopub.execute_input":"2024-07-06T19:56:44.180360Z","iopub.status.idle":"2024-07-06T19:56:47.071765Z","shell.execute_reply.started":"2024-07-06T19:56:44.180315Z","shell.execute_reply":"2024-07-06T19:56:47.070226Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/heart-disease-predict/Heart_Disease_Prediction.csv\n/kaggle/input/heart-disease-prediction/Heart_Disease_Prediction.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"d=pd.read_csv('/kaggle/input/heart-disease-predict/Heart_Disease_Prediction.csv')","metadata":{"papermill":{"duration":0.040028,"end_time":"2024-06-04T15:26:11.387033","exception":false,"start_time":"2024-06-04T15:26:11.347005","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.075028Z","iopub.execute_input":"2024-07-06T19:56:47.076207Z","iopub.status.idle":"2024-07-06T19:56:47.099598Z","shell.execute_reply.started":"2024-07-06T19:56:47.076093Z","shell.execute_reply":"2024-07-06T19:56:47.097452Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"d.head()","metadata":{"papermill":{"duration":0.049232,"end_time":"2024-06-04T15:26:11.450482","exception":false,"start_time":"2024-06-04T15:26:11.401250","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.101679Z","iopub.execute_input":"2024-07-06T19:56:47.102164Z","iopub.status.idle":"2024-07-06T19:56:47.144499Z","shell.execute_reply.started":"2024-07-06T19:56:47.102104Z","shell.execute_reply":"2024-07-06T19:56:47.143229Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0            2.4            2   \n1     160                0            1.6            2   \n2     141                0            0.3            1   \n3     105                1            0.2            2   \n4     121                1            0.2            1   \n\n   Number of vessels fluro  Thallium Heart Disease  \n0                        3         3      Presence  \n1                        0         7       Absence  \n2                        0         7      Presence  \n3                        1         7       Absence  \n4                        1         3       Absence  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2.4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1.6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0.3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0.2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0.2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Absence</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"d.info()","metadata":{"papermill":{"duration":0.045016,"end_time":"2024-06-04T15:26:11.509795","exception":false,"start_time":"2024-06-04T15:26:11.464779","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.147181Z","iopub.execute_input":"2024-07-06T19:56:47.148048Z","iopub.status.idle":"2024-07-06T19:56:47.178047Z","shell.execute_reply.started":"2024-07-06T19:56:47.148014Z","shell.execute_reply":"2024-07-06T19:56:47.176674Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 270 entries, 0 to 269\nData columns (total 14 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   Age                      270 non-null    int64  \n 1   Sex                      270 non-null    int64  \n 2   Chest pain type          270 non-null    int64  \n 3   BP                       270 non-null    int64  \n 4   Cholesterol              270 non-null    int64  \n 5   FBS over 120             270 non-null    int64  \n 6   EKG results              270 non-null    int64  \n 7   Max HR                   270 non-null    int64  \n 8   Exercise angina          270 non-null    int64  \n 9   ST depression            270 non-null    float64\n 10  Slope of ST              270 non-null    int64  \n 11  Number of vessels fluro  270 non-null    int64  \n 12  Thallium                 270 non-null    int64  \n 13  Heart Disease            270 non-null    object \ndtypes: float64(1), int64(12), object(1)\nmemory usage: 29.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"d.describe()","metadata":{"papermill":{"duration":0.068538,"end_time":"2024-06-04T15:26:11.592717","exception":false,"start_time":"2024-06-04T15:26:11.524179","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.179625Z","iopub.execute_input":"2024-07-06T19:56:47.179958Z","iopub.status.idle":"2024-07-06T19:56:47.238537Z","shell.execute_reply.started":"2024-07-06T19:56:47.179931Z","shell.execute_reply":"2024-07-06T19:56:47.237166Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"              Age         Sex  Chest pain type          BP  Cholesterol  \\\ncount  270.000000  270.000000       270.000000  270.000000   270.000000   \nmean    54.433333    0.677778         3.174074  131.344444   249.659259   \nstd      9.109067    0.468195         0.950090   17.861608    51.686237   \nmin     29.000000    0.000000         1.000000   94.000000   126.000000   \n25%     48.000000    0.000000         3.000000  120.000000   213.000000   \n50%     55.000000    1.000000         3.000000  130.000000   245.000000   \n75%     61.000000    1.000000         4.000000  140.000000   280.000000   \nmax     77.000000    1.000000         4.000000  200.000000   564.000000   \n\n       FBS over 120  EKG results      Max HR  Exercise angina  ST depression  \\\ncount    270.000000   270.000000  270.000000       270.000000      270.00000   \nmean       0.148148     1.022222  149.677778         0.329630        1.05000   \nstd        0.355906     0.997891   23.165717         0.470952        1.14521   \nmin        0.000000     0.000000   71.000000         0.000000        0.00000   \n25%        0.000000     0.000000  133.000000         0.000000        0.00000   \n50%        0.000000     2.000000  153.500000         0.000000        0.80000   \n75%        0.000000     2.000000  166.000000         1.000000        1.60000   \nmax        1.000000     2.000000  202.000000         1.000000        6.20000   \n\n       Slope of ST  Number of vessels fluro    Thallium  \ncount   270.000000               270.000000  270.000000  \nmean      1.585185                 0.670370    4.696296  \nstd       0.614390                 0.943896    1.940659  \nmin       1.000000                 0.000000    3.000000  \n25%       1.000000                 0.000000    3.000000  \n50%       2.000000                 0.000000    3.000000  \n75%       2.000000                 1.000000    7.000000  \nmax       3.000000                 3.000000    7.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.00000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n      <td>270.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>54.433333</td>\n      <td>0.677778</td>\n      <td>3.174074</td>\n      <td>131.344444</td>\n      <td>249.659259</td>\n      <td>0.148148</td>\n      <td>1.022222</td>\n      <td>149.677778</td>\n      <td>0.329630</td>\n      <td>1.05000</td>\n      <td>1.585185</td>\n      <td>0.670370</td>\n      <td>4.696296</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>9.109067</td>\n      <td>0.468195</td>\n      <td>0.950090</td>\n      <td>17.861608</td>\n      <td>51.686237</td>\n      <td>0.355906</td>\n      <td>0.997891</td>\n      <td>23.165717</td>\n      <td>0.470952</td>\n      <td>1.14521</td>\n      <td>0.614390</td>\n      <td>0.943896</td>\n      <td>1.940659</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>29.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>94.000000</td>\n      <td>126.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>71.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>48.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n      <td>120.000000</td>\n      <td>213.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>133.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>55.000000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>130.000000</td>\n      <td>245.000000</td>\n      <td>0.000000</td>\n      <td>2.000000</td>\n      <td>153.500000</td>\n      <td>0.000000</td>\n      <td>0.80000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>61.000000</td>\n      <td>1.000000</td>\n      <td>4.000000</td>\n      <td>140.000000</td>\n      <td>280.000000</td>\n      <td>0.000000</td>\n      <td>2.000000</td>\n      <td>166.000000</td>\n      <td>1.000000</td>\n      <td>1.60000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>77.000000</td>\n      <td>1.000000</td>\n      <td>4.000000</td>\n      <td>200.000000</td>\n      <td>564.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>202.000000</td>\n      <td>1.000000</td>\n      <td>6.20000</td>\n      <td>3.000000</td>\n      <td>3.000000</td>\n      <td>7.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"d.shape","metadata":{"papermill":{"duration":0.025386,"end_time":"2024-06-04T15:26:11.633231","exception":false,"start_time":"2024-06-04T15:26:11.607845","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.240355Z","iopub.execute_input":"2024-07-06T19:56:47.241076Z","iopub.status.idle":"2024-07-06T19:56:47.248655Z","shell.execute_reply.started":"2024-07-06T19:56:47.241024Z","shell.execute_reply":"2024-07-06T19:56:47.247368Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"(270, 14)"},"metadata":{}}]},{"cell_type":"code","source":"d.isnull().sum()","metadata":{"papermill":{"duration":0.027898,"end_time":"2024-06-04T15:26:11.676126","exception":false,"start_time":"2024-06-04T15:26:11.648228","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.250321Z","iopub.execute_input":"2024-07-06T19:56:47.250824Z","iopub.status.idle":"2024-07-06T19:56:47.272342Z","shell.execute_reply.started":"2024-07-06T19:56:47.250784Z","shell.execute_reply":"2024-07-06T19:56:47.271168Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Age                        0\nSex                        0\nChest pain type            0\nBP                         0\nCholesterol                0\nFBS over 120               0\nEKG results                0\nMax HR                     0\nExercise angina            0\nST depression              0\nSlope of ST                0\nNumber of vessels fluro    0\nThallium                   0\nHeart Disease              0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder","metadata":{"papermill":{"duration":0.274036,"end_time":"2024-06-04T15:26:11.965263","exception":false,"start_time":"2024-06-04T15:26:11.691227","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.274194Z","iopub.execute_input":"2024-07-06T19:56:47.274670Z","iopub.status.idle":"2024-07-06T19:56:47.584437Z","shell.execute_reply.started":"2024-07-06T19:56:47.274625Z","shell.execute_reply":"2024-07-06T19:56:47.583111Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"le=LabelEncoder()","metadata":{"papermill":{"duration":0.024026,"end_time":"2024-06-04T15:26:12.004524","exception":false,"start_time":"2024-06-04T15:26:11.980498","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.586408Z","iopub.execute_input":"2024-07-06T19:56:47.587396Z","iopub.status.idle":"2024-07-06T19:56:47.592563Z","shell.execute_reply.started":"2024-07-06T19:56:47.587350Z","shell.execute_reply":"2024-07-06T19:56:47.591213Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"d['Sex'].unique()","metadata":{"papermill":{"duration":0.028492,"end_time":"2024-06-04T15:26:12.048079","exception":false,"start_time":"2024-06-04T15:26:12.019587","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.594060Z","iopub.execute_input":"2024-07-06T19:56:47.594586Z","iopub.status.idle":"2024-07-06T19:56:47.616764Z","shell.execute_reply.started":"2024-07-06T19:56:47.594547Z","shell.execute_reply":"2024-07-06T19:56:47.615353Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"array([1, 0])"},"metadata":{}}]},{"cell_type":"code","source":"d['Chest pain type'].unique()","metadata":{"papermill":{"duration":0.027154,"end_time":"2024-06-04T15:26:12.090459","exception":false,"start_time":"2024-06-04T15:26:12.063305","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.623624Z","iopub.execute_input":"2024-07-06T19:56:47.624483Z","iopub.status.idle":"2024-07-06T19:56:47.636404Z","shell.execute_reply.started":"2024-07-06T19:56:47.624437Z","shell.execute_reply":"2024-07-06T19:56:47.635042Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"array([4, 3, 2, 1])"},"metadata":{}}]},{"cell_type":"code","source":"d.info()","metadata":{"papermill":{"duration":0.031488,"end_time":"2024-06-04T15:26:12.137455","exception":false,"start_time":"2024-06-04T15:26:12.105967","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.638448Z","iopub.execute_input":"2024-07-06T19:56:47.639463Z","iopub.status.idle":"2024-07-06T19:56:47.659700Z","shell.execute_reply.started":"2024-07-06T19:56:47.639417Z","shell.execute_reply":"2024-07-06T19:56:47.658295Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 270 entries, 0 to 269\nData columns (total 14 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   Age                      270 non-null    int64  \n 1   Sex                      270 non-null    int64  \n 2   Chest pain type          270 non-null    int64  \n 3   BP                       270 non-null    int64  \n 4   Cholesterol              270 non-null    int64  \n 5   FBS over 120             270 non-null    int64  \n 6   EKG results              270 non-null    int64  \n 7   Max HR                   270 non-null    int64  \n 8   Exercise angina          270 non-null    int64  \n 9   ST depression            270 non-null    float64\n 10  Slope of ST              270 non-null    int64  \n 11  Number of vessels fluro  270 non-null    int64  \n 12  Thallium                 270 non-null    int64  \n 13  Heart Disease            270 non-null    object \ndtypes: float64(1), int64(12), object(1)\nmemory usage: 29.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"d['Heart Disease'].unique()","metadata":{"papermill":{"duration":0.026781,"end_time":"2024-06-04T15:26:12.179757","exception":false,"start_time":"2024-06-04T15:26:12.152976","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.661077Z","iopub.execute_input":"2024-07-06T19:56:47.662107Z","iopub.status.idle":"2024-07-06T19:56:47.675843Z","shell.execute_reply.started":"2024-07-06T19:56:47.662064Z","shell.execute_reply":"2024-07-06T19:56:47.674525Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"array(['Presence', 'Absence'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"d.head()","metadata":{"papermill":{"duration":0.037802,"end_time":"2024-06-04T15:26:12.233476","exception":false,"start_time":"2024-06-04T15:26:12.195674","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.677370Z","iopub.execute_input":"2024-07-06T19:56:47.677744Z","iopub.status.idle":"2024-07-06T19:56:47.700091Z","shell.execute_reply.started":"2024-07-06T19:56:47.677716Z","shell.execute_reply":"2024-07-06T19:56:47.698844Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0            2.4            2   \n1     160                0            1.6            2   \n2     141                0            0.3            1   \n3     105                1            0.2            2   \n4     121                1            0.2            1   \n\n   Number of vessels fluro  Thallium Heart Disease  \n0                        3         3      Presence  \n1                        0         7       Absence  \n2                        0         7      Presence  \n3                        1         7       Absence  \n4                        1         3       Absence  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2.4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1.6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0.3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0.2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0.2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Absence</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"d.info()","metadata":{"papermill":{"duration":0.032245,"end_time":"2024-06-04T15:26:12.281606","exception":false,"start_time":"2024-06-04T15:26:12.249361","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.701516Z","iopub.execute_input":"2024-07-06T19:56:47.702450Z","iopub.status.idle":"2024-07-06T19:56:47.724451Z","shell.execute_reply.started":"2024-07-06T19:56:47.702418Z","shell.execute_reply":"2024-07-06T19:56:47.722852Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 270 entries, 0 to 269\nData columns (total 14 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   Age                      270 non-null    int64  \n 1   Sex                      270 non-null    int64  \n 2   Chest pain type          270 non-null    int64  \n 3   BP                       270 non-null    int64  \n 4   Cholesterol              270 non-null    int64  \n 5   FBS over 120             270 non-null    int64  \n 6   EKG results              270 non-null    int64  \n 7   Max HR                   270 non-null    int64  \n 8   Exercise angina          270 non-null    int64  \n 9   ST depression            270 non-null    float64\n 10  Slope of ST              270 non-null    int64  \n 11  Number of vessels fluro  270 non-null    int64  \n 12  Thallium                 270 non-null    int64  \n 13  Heart Disease            270 non-null    object \ndtypes: float64(1), int64(12), object(1)\nmemory usage: 29.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"d['ST depression']=d['ST depression'].astype(int)","metadata":{"papermill":{"duration":0.025574,"end_time":"2024-06-04T15:26:12.323585","exception":false,"start_time":"2024-06-04T15:26:12.298011","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.726177Z","iopub.execute_input":"2024-07-06T19:56:47.726537Z","iopub.status.idle":"2024-07-06T19:56:47.739777Z","shell.execute_reply.started":"2024-07-06T19:56:47.726508Z","shell.execute_reply":"2024-07-06T19:56:47.738326Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"d.head()","metadata":{"papermill":{"duration":0.036745,"end_time":"2024-06-04T15:26:12.376368","exception":false,"start_time":"2024-06-04T15:26:12.339623","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.742023Z","iopub.execute_input":"2024-07-06T19:56:47.742438Z","iopub.status.idle":"2024-07-06T19:56:47.768092Z","shell.execute_reply.started":"2024-07-06T19:56:47.742400Z","shell.execute_reply":"2024-07-06T19:56:47.766985Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0              2            2   \n1     160                0              1            2   \n2     141                0              0            1   \n3     105                1              0            2   \n4     121                1              0            1   \n\n   Number of vessels fluro  Thallium Heart Disease  \n0                        3         3      Presence  \n1                        0         7       Absence  \n2                        0         7      Presence  \n3                        1         7       Absence  \n4                        1         3       Absence  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>Presence</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>Absence</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Absence</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"d.info()","metadata":{"papermill":{"duration":0.033981,"end_time":"2024-06-04T15:26:12.426869","exception":false,"start_time":"2024-06-04T15:26:12.392888","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.769562Z","iopub.execute_input":"2024-07-06T19:56:47.769896Z","iopub.status.idle":"2024-07-06T19:56:47.790655Z","shell.execute_reply.started":"2024-07-06T19:56:47.769868Z","shell.execute_reply":"2024-07-06T19:56:47.789360Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 270 entries, 0 to 269\nData columns (total 14 columns):\n #   Column                   Non-Null Count  Dtype \n---  ------                   --------------  ----- \n 0   Age                      270 non-null    int64 \n 1   Sex                      270 non-null    int64 \n 2   Chest pain type          270 non-null    int64 \n 3   BP                       270 non-null    int64 \n 4   Cholesterol              270 non-null    int64 \n 5   FBS over 120             270 non-null    int64 \n 6   EKG results              270 non-null    int64 \n 7   Max HR                   270 non-null    int64 \n 8   Exercise angina          270 non-null    int64 \n 9   ST depression            270 non-null    int64 \n 10  Slope of ST              270 non-null    int64 \n 11  Number of vessels fluro  270 non-null    int64 \n 12  Thallium                 270 non-null    int64 \n 13  Heart Disease            270 non-null    object\ndtypes: int64(13), object(1)\nmemory usage: 29.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"d['Heart Disease'].value_counts()","metadata":{"papermill":{"duration":0.029169,"end_time":"2024-06-04T15:26:12.472848","exception":false,"start_time":"2024-06-04T15:26:12.443679","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.793343Z","iopub.execute_input":"2024-07-06T19:56:47.793792Z","iopub.status.idle":"2024-07-06T19:56:47.808162Z","shell.execute_reply.started":"2024-07-06T19:56:47.793751Z","shell.execute_reply":"2024-07-06T19:56:47.806683Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"Heart Disease\nAbsence     150\nPresence    120\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"d['Heart Disease'] = le.fit_transform(d['Heart Disease'])\nd['Heart Disease'] = d['Heart Disease'].astype(int)\nd","metadata":{"papermill":{"duration":0.04282,"end_time":"2024-06-04T15:26:12.532441","exception":false,"start_time":"2024-06-04T15:26:12.489621","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.809505Z","iopub.execute_input":"2024-07-06T19:56:47.809825Z","iopub.status.idle":"2024-07-06T19:56:47.836224Z","shell.execute_reply.started":"2024-07-06T19:56:47.809799Z","shell.execute_reply":"2024-07-06T19:56:47.834928Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"     Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0     70    1                4  130          322             0            2   \n1     67    0                3  115          564             0            2   \n2     57    1                2  124          261             0            0   \n3     64    1                4  128          263             0            0   \n4     74    0                2  120          269             0            2   \n..   ...  ...              ...  ...          ...           ...          ...   \n265   52    1                3  172          199             1            0   \n266   44    1                2  120          263             0            0   \n267   56    0                2  140          294             0            2   \n268   57    1                4  140          192             0            0   \n269   67    1                4  160          286             0            2   \n\n     Max HR  Exercise angina  ST depression  Slope of ST  \\\n0       109                0              2            2   \n1       160                0              1            2   \n2       141                0              0            1   \n3       105                1              0            2   \n4       121                1              0            1   \n..      ...              ...            ...          ...   \n265     162                0              0            1   \n266     173                0              0            1   \n267     153                0              1            2   \n268     148                0              0            2   \n269     108                1              1            2   \n\n     Number of vessels fluro  Thallium  Heart Disease  \n0                          3         3              1  \n1                          0         7              0  \n2                          0         7              1  \n3                          1         7              0  \n4                          1         3              0  \n..                       ...       ...            ...  \n265                        0         7              0  \n266                        0         7              0  \n267                        0         3              0  \n268                        0         6              0  \n269                        3         3              1  \n\n[270 rows x 14 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>265</th>\n      <td>52</td>\n      <td>1</td>\n      <td>3</td>\n      <td>172</td>\n      <td>199</td>\n      <td>1</td>\n      <td>0</td>\n      <td>162</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>266</th>\n      <td>44</td>\n      <td>1</td>\n      <td>2</td>\n      <td>120</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>173</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>267</th>\n      <td>56</td>\n      <td>0</td>\n      <td>2</td>\n      <td>140</td>\n      <td>294</td>\n      <td>0</td>\n      <td>2</td>\n      <td>153</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>268</th>\n      <td>57</td>\n      <td>1</td>\n      <td>4</td>\n      <td>140</td>\n      <td>192</td>\n      <td>0</td>\n      <td>0</td>\n      <td>148</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>269</th>\n      <td>67</td>\n      <td>1</td>\n      <td>4</td>\n      <td>160</td>\n      <td>286</td>\n      <td>0</td>\n      <td>2</td>\n      <td>108</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>270 rows × 14 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Analysis**","metadata":{"papermill":{"duration":0.016864,"end_time":"2024-06-04T15:26:12.566890","exception":false,"start_time":"2024-06-04T15:26:12.550026","status":"completed"},"tags":[]}},{"cell_type":"code","source":"sns.set()\nplt.figure(figsize=(6,4))\nb=sns.countplot(x=\"Sex\",data=d)\nfor bar in b.containers:\n    label=bar.get_label()\n    b.bar_label(bar,label=label)\nplt.show()","metadata":{"papermill":{"duration":0.259498,"end_time":"2024-06-04T15:26:12.843628","exception":false,"start_time":"2024-06-04T15:26:12.584130","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:47.837889Z","iopub.execute_input":"2024-07-06T19:56:47.839055Z","iopub.status.idle":"2024-07-06T19:56:48.113902Z","shell.execute_reply.started":"2024-07-06T19:56:47.839012Z","shell.execute_reply":"2024-07-06T19:56:48.112525Z"},"trusted":true},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 600x400 with 1 Axes>","image/png":"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2jRt2bJFDzzwgPbv368//OEPhBLAQFwxAWC0Cxcu6LPPPtOGDRv06quvyul06q233tLrr7+uN99887LbxcTE6O233y7XNmbMGL3//vu699579eyzz9Z16QA8wFM5AIzm7++vuLg4xcXFqWPHjnr66aeVmZkpp9Mpi8WiRYsWyWazVdguKCio3PLZs2e1d+9eSdLnn38up9Mpq5WLxoBpCCYAfMYNN9wgScrNzVX79u3lcrnUtm1bRUZGXnHbZ599VufOndOTTz6pF154Qa+99ppGjRpV1yUDqCb+uQDAOP/+979V2V3mS4/2RkVF6dZbb5XNZtOcOXMq9HW5XDp79qx7OTMzUxkZGXryySf1yCOPaODAgZo9e7YOHz5cty8EQLUxxgSAcVJTU1VcXKx+/fopKipKJSUl+vjjj/XOO++oVatWeuutt2S327Vw4UK98MILSkhIUN++fRUcHKxjx45pw4YNuueee/TQQw/p9OnTGjhwoK699lq99tprslgsOnv2rFJTU9WuXTv97W9/45YOYBCCCQDjbN68WZmZmdq1a5dOnDihkpIStW7dWj179tRjjz1WbpK1devW6dVXX9X+/fslSa1atVJSUpKGDx+uyMhIjR07Vlu2bNHatWvVpk0b93YbN27U448/rqeeesr9aDIA7yOYAAAAY3D9EgAAGINgAgAAjEEwAQAAxiCYAAAAYxBMAACAMQgmAADAGAQTAABgDIIJAAAwBsEEAAAYg2ACAACMQTABAADGIJgAAABjEEwAAIAx/j+IoECnF13qTwAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"papermill":{"duration":0.017195,"end_time":"2024-06-04T15:26:12.878442","exception":false,"start_time":"2024-06-04T15:26:12.861247","status":"completed"},"tags":[]},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.set()\nplt.figure(figsize=(6,4))\nb=sns.countplot(x=\"Chest pain type\",data=d)\nfor bar in b.containers:\n    label=bar.get_label()\n    b.bar_label(bar,label=label)\nplt.show()","metadata":{"papermill":{"duration":0.30713,"end_time":"2024-06-04T15:26:13.263132","exception":false,"start_time":"2024-06-04T15:26:12.956002","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:48.115236Z","iopub.execute_input":"2024-07-06T19:56:48.116409Z","iopub.status.idle":"2024-07-06T19:56:48.373837Z","shell.execute_reply.started":"2024-07-06T19:56:48.116357Z","shell.execute_reply":"2024-07-06T19:56:48.372425Z"},"trusted":true},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 600x400 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#10)heartdisease count\nsns.set_theme(style=\"white\", palette=None)\nsns.set_color_codes(palette='deep')\nsns.pairplot(d)","metadata":{"papermill":{"duration":76.057308,"end_time":"2024-06-04T15:27:29.338536","exception":false,"start_time":"2024-06-04T15:26:13.281228","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:56:48.375289Z","iopub.execute_input":"2024-07-06T19:56:48.375660Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.PairGrid at 0x7ab3116a03a0>"},"metadata":{}}]},{"cell_type":"code","source":"plt.figure(figsize=(12,4))\nsns.lineplot(data=d, x=\"Sex\", y=\"Heart Disease\")","metadata":{"papermill":{"duration":0.546379,"end_time":"2024-06-04T15:27:29.913640","exception":false,"start_time":"2024-06-04T15:27:29.367261","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:57:59.483467Z","iopub.execute_input":"2024-07-06T19:57:59.483869Z","iopub.status.idle":"2024-07-06T19:57:59.950702Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='Sex', ylabel='Heart Disease'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"d.info()","metadata":{"papermill":{"duration":0.046765,"end_time":"2024-06-04T15:27:29.989830","exception":false,"start_time":"2024-06-04T15:27:29.943065","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:57:59.952328Z","iopub.execute_input":"2024-07-06T19:57:59.952764Z","iopub.status.idle":"2024-07-06T19:57:59.964982Z","shell.execute_reply.started":"2024-07-06T19:57:59.952724Z","shell.execute_reply":"2024-07-06T19:57:59.963546Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 270 entries, 0 to 269\nData columns (total 14 columns):\n #   Column                   Non-Null Count  Dtype\n---  ------                   --------------  -----\n 0   Age                      270 non-null    int64\n 1   Sex                      270 non-null    int64\n 2   Chest pain type          270 non-null    int64\n 3   BP                       270 non-null    int64\n 4   Cholesterol              270 non-null    int64\n 5   FBS over 120             270 non-null    int64\n 6   EKG results              270 non-null    int64\n 7   Max HR                   270 non-null    int64\n 8   Exercise angina          270 non-null    int64\n 9   ST depression            270 non-null    int64\n 10  Slope of ST              270 non-null    int64\n 11  Number of vessels fluro  270 non-null    int64\n 12  Thallium                 270 non-null    int64\n 13  Heart Disease            270 non-null    int64\ndtypes: int64(14)\nmemory usage: 29.7 KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"ML TRAIN AND TEST\n","metadata":{"papermill":{"duration":0.031048,"end_time":"2024-06-04T15:27:30.050553","exception":false,"start_time":"2024-06-04T15:27:30.019505","status":"completed"},"tags":[]}},{"cell_type":"code","source":"d.head()","metadata":{"papermill":{"duration":0.051045,"end_time":"2024-06-04T15:27:30.131511","exception":false,"start_time":"2024-06-04T15:27:30.080466","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:57:59.966958Z","iopub.execute_input":"2024-07-06T19:57:59.967520Z","iopub.status.idle":"2024-07-06T19:57:59.986883Z","shell.execute_reply.started":"2024-07-06T19:57:59.967455Z","shell.execute_reply":"2024-07-06T19:57:59.985479Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0              2            2   \n1     160                0              1            2   \n2     141                0              0            1   \n3     105                1              0            2   \n4     121                1              0            1   \n\n   Number of vessels fluro  Thallium  Heart Disease  \n0                        3         3              1  \n1                        0         7              0  \n2                        0         7              1  \n3                        1         7              0  \n4                        1         3              0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X=d.drop('Heart Disease', axis=1)\ny=d['Heart Disease']","metadata":{"papermill":{"duration":0.041055,"end_time":"2024-06-04T15:27:30.202479","exception":false,"start_time":"2024-06-04T15:27:30.161424","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:57:59.988489Z","iopub.execute_input":"2024-07-06T19:57:59.988880Z","iopub.status.idle":"2024-07-06T19:57:59.999853Z","shell.execute_reply.started":"2024-07-06T19:57:59.988848Z","shell.execute_reply":"2024-07-06T19:57:59.998593Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split","metadata":{"papermill":{"duration":0.159086,"end_time":"2024-06-04T15:27:30.391878","exception":false,"start_time":"2024-06-04T15:27:30.232792","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.001491Z","iopub.execute_input":"2024-07-06T19:58:00.001957Z","iopub.status.idle":"2024-07-06T19:58:00.137554Z","shell.execute_reply.started":"2024-07-06T19:58:00.001917Z","shell.execute_reply":"2024-07-06T19:58:00.136217Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)","metadata":{"papermill":{"duration":0.04506,"end_time":"2024-06-04T15:27:30.467027","exception":false,"start_time":"2024-06-04T15:27:30.421967","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.139102Z","iopub.execute_input":"2024-07-06T19:58:00.139503Z","iopub.status.idle":"2024-07-06T19:58:00.148614Z","shell.execute_reply.started":"2024-07-06T19:58:00.139473Z","shell.execute_reply":"2024-07-06T19:58:00.147245Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"len(X_train)","metadata":{"papermill":{"duration":0.040426,"end_time":"2024-06-04T15:27:30.537202","exception":false,"start_time":"2024-06-04T15:27:30.496776","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.150372Z","iopub.execute_input":"2024-07-06T19:58:00.150765Z","iopub.status.idle":"2024-07-06T19:58:00.165222Z","shell.execute_reply.started":"2024-07-06T19:58:00.150731Z","shell.execute_reply":"2024-07-06T19:58:00.163855Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"216"},"metadata":{}}]},{"cell_type":"code","source":"len(X_test)","metadata":{"papermill":{"duration":0.040884,"end_time":"2024-06-04T15:27:30.608142","exception":false,"start_time":"2024-06-04T15:27:30.567258","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.167276Z","iopub.execute_input":"2024-07-06T19:58:00.167682Z","iopub.status.idle":"2024-07-06T19:58:00.182176Z","shell.execute_reply.started":"2024-07-06T19:58:00.167651Z","shell.execute_reply":"2024-07-06T19:58:00.179963Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"54"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score,classification_report,f1_score","metadata":{"papermill":{"duration":0.313504,"end_time":"2024-06-04T15:27:30.951663","exception":false,"start_time":"2024-06-04T15:27:30.638159","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.188934Z","iopub.execute_input":"2024-07-06T19:58:00.189380Z","iopub.status.idle":"2024-07-06T19:58:00.500473Z","shell.execute_reply.started":"2024-07-06T19:58:00.189340Z","shell.execute_reply":"2024-07-06T19:58:00.499229Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"models=[DecisionTreeClassifier(),RandomForestClassifier(),SVC(),KNeighborsClassifier(),GaussianNB()]","metadata":{"papermill":{"duration":0.039499,"end_time":"2024-06-04T15:27:31.021306","exception":false,"start_time":"2024-06-04T15:27:30.981807","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.501714Z","iopub.execute_input":"2024-07-06T19:58:00.502048Z","iopub.status.idle":"2024-07-06T19:58:00.507775Z","shell.execute_reply.started":"2024-07-06T19:58:00.502018Z","shell.execute_reply":"2024-07-06T19:58:00.506416Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"d.head()","metadata":{"papermill":{"duration":0.051539,"end_time":"2024-06-04T15:27:31.104685","exception":false,"start_time":"2024-06-04T15:27:31.053146","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.509068Z","iopub.execute_input":"2024-07-06T19:58:00.509518Z","iopub.status.idle":"2024-07-06T19:58:00.536530Z","shell.execute_reply.started":"2024-07-06T19:58:00.509487Z","shell.execute_reply":"2024-07-06T19:58:00.535204Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0              2            2   \n1     160                0              1            2   \n2     141                0              0            1   \n3     105                1              0            2   \n4     121                1              0            1   \n\n   Number of vessels fluro  Thallium  Heart Disease  \n0                        3         3              1  \n1                        0         7              0  \n2                        0         7              1  \n3                        1         7              0  \n4                        1         3              0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"d=d.astype(int)\nd.head()","metadata":{"papermill":{"duration":0.052668,"end_time":"2024-06-04T15:27:31.188181","exception":false,"start_time":"2024-06-04T15:27:31.135513","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.538592Z","iopub.execute_input":"2024-07-06T19:58:00.539391Z","iopub.status.idle":"2024-07-06T19:58:00.558076Z","shell.execute_reply.started":"2024-07-06T19:58:00.539324Z","shell.execute_reply":"2024-07-06T19:58:00.556781Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n0   70    1                4  130          322             0            2   \n1   67    0                3  115          564             0            2   \n2   57    1                2  124          261             0            0   \n3   64    1                4  128          263             0            0   \n4   74    0                2  120          269             0            2   \n\n   Max HR  Exercise angina  ST depression  Slope of ST  \\\n0     109                0              2            2   \n1     160                0              1            2   \n2     141                0              0            1   \n3     105                1              0            2   \n4     121                1              0            1   \n\n   Number of vessels fluro  Thallium  Heart Disease  \n0                        3         3              1  \n1                        0         7              0  \n2                        0         7              1  \n3                        1         7              0  \n4                        1         3              0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>Chest pain type</th>\n      <th>BP</th>\n      <th>Cholesterol</th>\n      <th>FBS over 120</th>\n      <th>EKG results</th>\n      <th>Max HR</th>\n      <th>Exercise angina</th>\n      <th>ST depression</th>\n      <th>Slope of ST</th>\n      <th>Number of vessels fluro</th>\n      <th>Thallium</th>\n      <th>Heart Disease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>70</td>\n      <td>1</td>\n      <td>4</td>\n      <td>130</td>\n      <td>322</td>\n      <td>0</td>\n      <td>2</td>\n      <td>109</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>67</td>\n      <td>0</td>\n      <td>3</td>\n      <td>115</td>\n      <td>564</td>\n      <td>0</td>\n      <td>2</td>\n      <td>160</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>124</td>\n      <td>261</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>64</td>\n      <td>1</td>\n      <td>4</td>\n      <td>128</td>\n      <td>263</td>\n      <td>0</td>\n      <td>0</td>\n      <td>105</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>74</td>\n      <td>0</td>\n      <td>2</td>\n      <td>120</td>\n      <td>269</td>\n      <td>0</td>\n      <td>2</td>\n      <td>121</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"models=[DecisionTreeClassifier(),RandomForestClassifier(),SVC(),GaussianNB(),KNeighborsClassifier()]","metadata":{"papermill":{"duration":0.04106,"end_time":"2024-06-04T15:27:31.260021","exception":false,"start_time":"2024-06-04T15:27:31.218961","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.559494Z","iopub.execute_input":"2024-07-06T19:58:00.559847Z","iopub.status.idle":"2024-07-06T19:58:00.569780Z","shell.execute_reply.started":"2024-07-06T19:58:00.559818Z","shell.execute_reply":"2024-07-06T19:58:00.568388Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"def compare_models():\n    for model in models:\n        model.fit(X_train,y_train)\n        print(\"model name :\",model)\n        print(\"train score :\",model.score(X_train,y_train))\n        print(\"test score :\",model.score(X_test,y_test))\n        print(\"----------------------------------------------------------------------------------------------\")\ncompare_models()","metadata":{"papermill":{"duration":0.360056,"end_time":"2024-06-04T15:27:31.650948","exception":false,"start_time":"2024-06-04T15:27:31.290892","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.571334Z","iopub.execute_input":"2024-07-06T19:58:00.571748Z","iopub.status.idle":"2024-07-06T19:58:00.846832Z","shell.execute_reply.started":"2024-07-06T19:58:00.571690Z","shell.execute_reply":"2024-07-06T19:58:00.845617Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"model name : DecisionTreeClassifier()\ntrain score : 1.0\ntest score : 0.7407407407407407\n----------------------------------------------------------------------------------------------\nmodel name : RandomForestClassifier()\ntrain score : 1.0\ntest score : 0.8518518518518519\n----------------------------------------------------------------------------------------------\nmodel name : SVC()\ntrain score : 0.6712962962962963\ntest score : 0.6296296296296297\n----------------------------------------------------------------------------------------------\nmodel name : GaussianNB()\ntrain score : 0.8379629629629629\ntest score : 0.9074074074074074\n----------------------------------------------------------------------------------------------\nmodel name : KNeighborsClassifier()\ntrain score : 0.7685185185185185\ntest score : 0.6481481481481481\n----------------------------------------------------------------------------------------------\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression","metadata":{"papermill":{"duration":0.040763,"end_time":"2024-06-04T15:27:31.722937","exception":false,"start_time":"2024-06-04T15:27:31.682174","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.848355Z","iopub.execute_input":"2024-07-06T19:58:00.848686Z","iopub.status.idle":"2024-07-06T19:58:00.853530Z","shell.execute_reply.started":"2024-07-06T19:58:00.848660Z","shell.execute_reply":"2024-07-06T19:58:00.852237Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"lr=LogisticRegression(max_iter=1000)\nlr.fit(X_train,y_train)\npredictions=lr.predict(X_test)\nprint(\"train score :\",lr.score(X_train,y_train))\nprint(\"test score :\",lr.score(X_test,y_test))","metadata":{"papermill":{"duration":0.219016,"end_time":"2024-06-04T15:27:31.973112","exception":false,"start_time":"2024-06-04T15:27:31.754096","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:00.854916Z","iopub.execute_input":"2024-07-06T19:58:00.855303Z","iopub.status.idle":"2024-07-06T19:58:01.017150Z","shell.execute_reply.started":"2024-07-06T19:58:00.855273Z","shell.execute_reply":"2024-07-06T19:58:01.015869Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"train score : 0.8472222222222222\ntest score : 0.9074074074074074\n","output_type":"stream"}]},{"cell_type":"code","source":"diff=y_test - predictions","metadata":{"papermill":{"duration":0.042339,"end_time":"2024-06-04T15:27:32.047056","exception":false,"start_time":"2024-06-04T15:27:32.004717","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:01.018718Z","iopub.execute_input":"2024-07-06T19:58:01.019100Z","iopub.status.idle":"2024-07-06T19:58:01.025591Z","shell.execute_reply.started":"2024-07-06T19:58:01.019062Z","shell.execute_reply":"2024-07-06T19:58:01.024067Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"sns.distplot(diff,color='black')","metadata":{"papermill":{"duration":0.522351,"end_time":"2024-06-04T15:27:32.600994","exception":false,"start_time":"2024-06-04T15:27:32.078643","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-07-06T19:58:01.027472Z","iopub.execute_input":"2024-07-06T19:58:01.028345Z","iopub.status.idle":"2024-07-06T19:58:01.494947Z","shell.execute_reply.started":"2024-07-06T19:58:01.028309Z","shell.execute_reply":"2024-07-06T19:58:01.493747Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3885409744.py:1: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(diff,color='black')\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='Heart Disease', ylabel='Density'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"papermill":{"duration":0.031265,"end_time":"2024-06-04T15:27:32.663947","exception":false,"start_time":"2024-06-04T15:27:32.632682","status":"completed"},"tags":[]},"execution_count":null,"outputs":[]}]}